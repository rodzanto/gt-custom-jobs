{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar Mark_1 = __importDefault(require(\"./Mark\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar Token = function Token(props) {\n  return react_1[\"default\"].createElement(\"span\", {\n    \"data-i\": props.i\n  }, props.content, \" \");\n};\n\nvar TokenAnnotator = function TokenAnnotator(props) {\n  var renderMark = props.renderMark || function (props) {\n    return react_1[\"default\"].createElement(Mark_1[\"default\"], __assign({}, props));\n  };\n\n  var getSpan = function getSpan(span) {\n    if (props.getSpan) return props.getSpan(span);\n    return {\n      start: span.start,\n      end: span.end\n    };\n  };\n\n  var handleMouseUp = function handleMouseUp() {\n    var _a;\n\n    if (!props.onChange) return;\n    var selection = window.getSelection();\n    if (utils_1.selectionIsEmpty(selection)) return;\n\n    if (!selection.anchorNode.parentElement.hasAttribute('data-i') || !selection.focusNode.parentElement.hasAttribute('data-i')) {\n      window.getSelection().empty();\n      return false;\n    }\n\n    var start = parseInt(selection.anchorNode.parentElement.getAttribute('data-i'), 10);\n    var end = parseInt(selection.focusNode.parentElement.getAttribute('data-i'), 10);\n\n    if (utils_1.selectionIsBackwards(selection)) {\n      ;\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n\n    end += 1;\n    props.onChange(__spreadArrays(props.value, [getSpan({\n      start: start,\n      end: end,\n      tokens: props.tokens.slice(start, end)\n    })]));\n    window.getSelection().empty();\n  };\n\n  var handleSplitClick = function handleSplitClick(_a) {\n    var start = _a.start,\n        end = _a.end; // Find and remove the matching split.\n\n    var splitIndex = props.value.findIndex(function (s) {\n      return s.start === start && s.end === end;\n    });\n\n    if (splitIndex >= 0) {\n      props.onChange(__spreadArrays(props.value.slice(0, splitIndex), props.value.slice(splitIndex + 1)));\n    }\n  };\n\n  var tokens = props.tokens,\n      value = props.value,\n      onChange = props.onChange,\n      _ = props.getSpan,\n      divProps = __rest(props, [\"tokens\", \"value\", \"onChange\", \"getSpan\"]);\n\n  var splits = utils_1.splitTokensWithOffsets(tokens, value);\n  return react_1[\"default\"].createElement(\"div\", __assign({}, divProps, {\n    onMouseUp: handleMouseUp\n  }), splits.map(function (split, i) {\n    return split.mark ? renderMark(__assign(__assign({\n      key: split.start + \"-\" + split.end\n    }, split), {\n      onClick: handleSplitClick\n    })) : react_1[\"default\"].createElement(Token, __assign({\n      key: split.i\n    }, split));\n  }));\n};\n\nexports[\"default\"] = TokenAnnotator;","map":null,"metadata":{},"sourceType":"script"}